----------call fiel with cmd//-------

node global
node 
---------------------------
----------------server runing------------

var http = require('http');
http.createServer(function (request,response){
    response.writeHead(200,{'Content-Type':'text/plain'})
    response.end("Hatem  \n")
}).listen(8080);
console.log('Server running at http://127.0.0.1:8080');
---------------------------------
-------------console---------------
console.log('Server');
console.error('sds', err );
const name= 'hatem';
console.warn(`my name is:${name}`);
--------------------------version----------
npm version , npm -v ,
npm install express , npm install expres -g 
,npm uninstall express,npm ls.
--------------------__dirname---------------------------
console.log(__dirname);
console.log(__filename);
--------- ------------os operation--system------------
--------- ------------Time-----------------------------
setInterval(function(){
    console.log('hatemfaysil');
},1000);
////////////////////////////////
var count1 = 0;
console.log(count1);
setInterval(function(){
    count1++;
    console.log('hatem faysil'+count1);
},1000)
////////////////////////////////
setTimeout(function(){
    console.log('hatemfaysil');
},5000);
////////////////////////////////
var recursive = function(){
    console.log("hatem faysil");
    setTimeout(recursive,1000);
}
recursive();
////////////////////////////////
function muhammed(){
    console.log("Welcome node js");
}
var essa = setTimeout(muhammed,1000);
var hamdeed = setInterval(muhammed,1000);
clearTimeout(essa);
clearInterval(hamdeed);
////////////////////////////////
--------- ------------Time------------
--------- ------------errors------------
try {
    const x = 2;
    const d = x+y;
} catch (e) {
    console.log(e);
}
//////////////////file//////////////////////////////
const fs = require('fs');
function MuhammadCallback(err,data){
    if(err) {
        console.error("there is an error",err);
        return;
    }
    console.log(data);
}
fs.readFile('Desktop',MuhammadCallback);
--------- ------------errors------------
--------- ------------dns------------
const dns = require('dns');
dns.lookup('www.google.com',(err,addresses,family)=>{
    console.log('addresses',addresses);
    console.log('family',family);
});
/////////////////////////////////////////////////////////////////////////
const dns = require('dns');
dns.resolve4('www.google.com',(err,addresses)=>{
    if(err) throw err;
    console.log(`addresses:${JSON.stringify(addresses)}`);
    addresses.forEach((a)=>{
        dns.reverse(a,(err,hostnames)=>{
            if(err){
            throw err; }
            console.log(`reserve for ${a}:${JSON.stringify(hostnames)}`)
        });
    });
});
///////////////////////////////////////////////////////////////////////
const dns = require('dns');
dns.lookupService('142.251.37.36',23,(err,hostname,service)=>{
    console.log(hostname,service);
})
// ping
--------- ------------dns------------
--------- ------------start server------------
const net = require('net');
var server = net.createServer((socket)=>{
    socket.end('Thanks have a nice day ! :)');
}).on('error',(err)=>{
    throw err;
});

server.listen(()=>{
    address = server.address();
    console.log('listening on port :',address);
});
--------- ------------end server------------
--------- ------------start client------------
const net = require('net');
var client = net.connect({port:53399},()=>{
    console.log("Connected ! :) ");
    client.write("Hi am Client \n");
});

client.on('data',(data)=>{
    console.log(data.toString());
    client.end
});

client.on('end',()=>{
    console.log("Disconnected ! :( ");
})
--------- ------------end client------------
--------- ------------start clienttls------------
const tls = require('tls');

function connected(stream){
    if(stream){
        stream.write('GET/HTTP/1.0\n\rHost: encrypted.google.com:433\n\r\n\r');
    }else{
        console.log('Connection failed');
    }
}

var dummy = this;
dummy.socket = tls.connect(443,'encrypted.google.com',function(){
    dummy.connected = true;
    if(dummy.socket.authorized){
        dummy.socket.setEncoding('utf-8');
        connected(dummy.socket);
    }else{
        console.log(dummy.socket.authorizationError);
        console.log(null)
    }
});
dummy.socket.addListener('data',function(data){
    console.log(data);
});
dummy.socket.addListener('error',function(error){
    if(!dummy.connected){
        connected(null);
    }
    console.log('socket failed to connect');
    console.log(error);
});
dummy.socket.addListener('close',function(){

});
--------- ------------end clienttls------------
--------- ------------start process------------
console.log(process.arch);
console.log(process.pid);
console.log(process.platform);
console.log(process.version);
console.log(process.cwd());
console.log(process.uptime());
console.log(process.hrtime());
console.log(process.memoryUsage());
process.argv.forEach((value,index,array)=>{
    console.log(`${index} : ${value}`);
});
// coment { write cmd  node .\process hatem faysil 11}
--------- ------------end process------------
--------- ------------end Buffer------------
buf = new Buffer(256);
len = buf.write('Muahmmed Essa');
console.log('octet:' + len);

///////////////////////
buf = new Buffer(26);
for(var x=0; x<26;x++){
    buf[x]=x+100;
}
console.log(buf.toString('utf8',0,6));
console.log(buf.toString('ascil',0,6));
console.log(buf.toString('ascil'));
--------- ------------end Buffer------------
